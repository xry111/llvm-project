import("//llvm/utils/TableGen/tablegen.gni")

tablegen("LoongArchGenCallingConv") {
  visibility = [ ":LLVMLoongArchCodeGen" ]
  args = [ "-gen-callingconv" ]
  td_file = "LoongArch.td"
}

tablegen("LoongArchGenDAGISel") {
  visibility = [ ":LLVMLoongArchCodeGen" ]
  args = [ "-gen-dag-isel" ]
  td_file = "LoongArch.td"
}

tablegen("LoongArchGenFastISel") {
  visibility = [ ":LLVMLoongArchCodeGen" ]
  args = [ "-gen-fast-isel" ]
  td_file = "LoongArch.td"
}

tablegen("LoongArchGenGlobalISel") {
  visibility = [ ":LLVMLoongArchCodeGen" ]
  args = [ "-gen-global-isel" ]
  td_file = "LoongArch.td"
}

tablegen("LoongArchGenMCPseudoLowering") {
  visibility = [ ":LLVMLoongArchCodeGen" ]
  args = [ "-gen-pseudo-lowering" ]
  td_file = "LoongArch.td"
}

tablegen("LoongArchGenRegisterBank") {
  visibility = [ ":LLVMLoongArchCodeGen" ]
  args = [ "-gen-register-bank" ]
  td_file = "LoongArch.td"
}

static_library("LLVMLoongArchCodeGen") {
  deps = [
    ":LoongArchGenCallingConv",
    ":LoongArchGenDAGISel",
    ":LoongArchGenFastISel",
    ":LoongArchGenGlobalISel",
    ":LoongArchGenMCPseudoLowering",
    ":LoongArchGenRegisterBank",
    "MCTargetDesc",
    "TargetInfo",
    "//llvm/include/llvm/Config:llvm-config",
    "//llvm/lib/Analysis",
    "//llvm/lib/CodeGen",
    "//llvm/lib/CodeGen/AsmPrinter",
    "//llvm/lib/CodeGen/GlobalISel",
    "//llvm/lib/CodeGen/SelectionDAG",
    "//llvm/lib/IR",
    "//llvm/lib/MC",
    "//llvm/lib/Support",
    "//llvm/lib/Target",
  ]
  include_dirs = [ "." ]
  sources = [
    "LoongArchAnalyzeImmediate.cpp",
    "LoongArchAsmPrinter.cpp",
    "LoongArchCCState.cpp",
    "LoongArchCallLowering.cpp",
    "LoongArchConstantIslandPass.cpp",
    "LoongArchDelaySlotFiller.cpp",
    "LoongArchExpandPseudo.cpp",
    "LoongArchFrameLowering.cpp",
    "LoongArchISelDAGToDAG.cpp",
    "LoongArchISelLowering.cpp",
    "LoongArchInstrInfo.cpp",
    "LoongArchInstructionSelector.cpp",
    "LoongArchLegalizerInfo.cpp",
    "LoongArchMCInstLower.cpp",
    "LoongArchMachineFunction.cpp",
    "LoongArchModuleISelDAGToDAG.cpp",
    "LoongArchOptimizePICCall.cpp",
    "LoongArchPreLegalizerCombiner.cpp",
    "LoongArchRegisterBankInfo.cpp",
    "LoongArchRegisterInfo.cpp",
    "LoongArchSubtarget.cpp",
    "LoongArchTargetMachine.cpp",
    "LoongArchTargetObjectFile.cpp",
  ]
}

# This is a bit different from most build files: Due to this group
# having the directory's name, "//llvm/lib/Target/LoongArch" will refer to this
# target, which pulls in the code in this directory *and all subdirectories*.
# For most other directories, "//llvm/lib/Foo" only pulls in the code directly
# in "llvm/lib/Foo". The forwarding targets in //llvm/lib/Target expect this
# different behavior.
group("LoongArch") {
  deps = [
    ":LLVMLoongArchCodeGen",
    "AsmParser",
    "Disassembler",
    "MCTargetDesc",
    "TargetInfo",
  ]
}
